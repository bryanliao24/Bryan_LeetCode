使用一个栈来追踪左括号的位置索引，每当遇到右括号，就尝试匹配栈顶的左括号。
每次匹配成功，我可以用当前索引减去上一个未匹配的位置，来计算当前的有效长度。

class Solution:
    def longestValidParentheses(self, s: str) -> int:
        stack = [-1]
        max_len = 0

        for i in range(len(s)):
            if s[i] == "(":
                stack.append(i)
            else:
                stack.pop()
                if len(stack) == 0:
                    stack.append(i)
                else:
                    max_len = max(max_len, i - stack[-1])
        
        return max_len
        
