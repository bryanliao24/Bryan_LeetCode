我有一个阵列a = [[1,7], [5,7], [7,11]]代表x轴的各个范围，
b = [7,6,1,3,19,8]是目标坐标点，
输出是b中的每个x点交集a中的各个范围几次。试求次数。
所以以这个例子的b的第一个数7，输出是3因为交集[1,7], [5,7], [7,11]，而第二个6输出是2因为只有交集[1,7], [5,7]，完整的输出应该是[3, 2, 1, 1, 0, 1]

# 建立一个dp代表每个数字范围内的次数 最后直接用查询的
# trick是一开始计算dp的时候 dp[end + 1] -= 1 这样在后面没有重叠的部分可以消除

a = [[1,7], [5,7], [7,11]]
b = [7,6,1,3,19,8]

oneD = []
find_big = 0
find_big = max(r[1] for r in a) 

dp = [0] * (find_big + 2)

for start, end in a:
    dp[start] += 1
    dp[end + 1] -= 1

for i in range(1, len(dp)):
    dp[i] += dp[i-1]

ans = [dp[x] if x < find_big else 0 for x in b]
    
print(ans)
