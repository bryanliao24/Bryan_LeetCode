Python
----------------------------------------------------------------------
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        dic = {}
        # i是index v是nums的数字
        for i,v in enumerate(nums):
            if target-v in dic :
                return [dic[target-v],i]
            dic[v]=i

C
----------------------------------------------------------------------
int* twoSum(int* nums, int numsSize, int target, int* returnSize){
    int count=0;
    int next=1; 
    *returnSize = 2;
    returnSize = (int*)malloc(sizeof(int) * 2);
    for(count=0;count<numsSize;count++){
        for(next=1;next<numsSize  && next != count;next++){
            if(nums[count]+nums[next] == target){
                returnSize[0]=count;
                returnSize[1]=next;    
                return returnSize;
            }
        }
    }
    return returnSize;
}

----------------------------------------------------------------------
import java.util.HashMap;
import java.util.Map;
class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> dic = new HashMap<>();

        for(int i = 0; i < nums.length; i++){
            if(dic.containsKey(target-nums[i])){
                return new int[] {dic.get(target-nums[i]), i};
            }
            dic.put(nums[i],i);
        }
        return new int[] {};
    } 
}
