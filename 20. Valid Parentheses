bool isValid(char * s){
    char *stack;
    int top=0;
    char c;
    
    int l = strlen(s);
    stack = malloc(l * sizeof(char));

    while(c=*s ++){
        switch(c){
            case'(':
            case'{':
            case'[':
                stack[top++]=c;
                break;
            case')':
                if(top==0 || stack[--top]!='('){
                    free(stack);
                    return false;
                }
                break;
            case'}':
                if(top==0 || stack[--top]!='{'){
                    free(stack);
                    return false;
                }
                break;
            case']':
                if(top==0 || stack[--top]!='['){
                    free(stack);
                    return false;
                }
                break;
            default:
                break;
        }
    }
    free(stack);
    return top == 0 ? true : false;
}

-------------------------------------------------------------------
class Solution:
    def isValid(self, s: str) -> bool:
        ans = []
        form = {")":"(", "}":"{", "]":"["}

        for i in s:
            if i in form.values():
                ans.append(i)

            elif ans and i in form.keys():
                if not ans or form[i] != ans.pop():
                    return False

        return True if len(ans) == 0 else False
