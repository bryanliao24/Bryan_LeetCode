# <法一> Greedy
# 目前到index为止最大的和做Cursum  如果Cursum + 目前index的数比index本身大再更新
# 然后存到Maxsum
class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if not nums:
            return 0

        MaxSum = nums[0]
        CurSum = 0

        for i in nums:
            CurSum = max(CurSum + i, i)
            MaxSum = max(MaxSum, CurSum)
        
        return MaxSum
---------------------------------------------------------
# <法二> Dp
# 只要当到目前index的前一个数的总合>0的时候 再继续加
#      nums = [-2, 1, -3, 4,-1,2, 1, -5, 4]
# 变成 nums = [-2, 1, -2, 4, 3, 5, 6, 1, 5]

class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        for i in range(1, len(nums)):
            if nums[i-1] > 0:
                nums[i] = nums[i] + nums[i-1]

        return max(nums)
