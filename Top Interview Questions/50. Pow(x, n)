# recursive 
class Solution(object):
    def myPow(self, x, n):    
        if n == 0: return 1
        elif n == 1: return x
        
        if n < 0:
            return 1/self.myPow(x, -n)
        
        if n % 2:
            return x * self.myPow(x, n - 1)

        return self.myPow(x * x, n / 2)
----------------------------------------------

# iterative
class Solution(object):
    def myPow(self, x, n):       
        if n == 0: return 1
        elif n == 1: return x
        
        if n < 0:
            x = 1 / x
            n = abs(n)
        ans = 1
        while n:
            # if n & 1 was same as: if n % 2
            # n >> 1 was same as : n //= 2
            if n % 2:
                ans *= x
            x *= x
            n //= 2
        
        return ans
            
