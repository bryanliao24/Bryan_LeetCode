# <法一> iterative

class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        dummy = ListNode(0)   
        cur = dummy
        carry = 0

        while l1 or l2 or carry:  # 只要有进位就要继续
            val1 = l1.val if l1 else 0
            val2 = l2.val if l2 else 0

            total = val1 + val2 + carry
            carry = total // 10
            digit = total % 10

            cur.next = ListNode(digit)
            cur = cur.next

            if l1: l1 = l1.next
            if l2: l2 = l2.next

        return dummy.next

---------------------------------------------------------------
# <法二> recursive

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        if not l1:
            return l2
        if not l2:
            return l1
        
        temp = l1.val + l2.val
        Ge_value = temp % 10
        ans = ListNode(Ge_value)

        ans.next = self.addTwoNumbers(l1.next, l2.next)
        if temp >= 10:
            ans.next = self.addTwoNumbers(ans.next, ListNode(1))
        
        return ans

            
