把每个正整数 x 放到索引 x - 1 的位置上（如果在范围 [1, n] 内，直接swap互換）。
然后再遍历一遍数组，找到第一个不满足 nums[i] == i + 1 的位置，即为缺失的最小正整数。

class Solution:
    def firstMissingPositive(self, nums: List[int]) -> int:
        n = len(nums)
        
        for i in range(n):
            # swap until nums[i] is in the correct place or out of range
            while 1 <= nums[i] <= n and nums[nums[i]-1] != nums[i]:
                correct_index = nums[i] - 1
                nums[i], nums[correct_index] = nums[correct_index], nums[i]

        # find the first place that is not i+1
        for i in range(n):
            if nums[i] != i + 1:
                return i + 1
        
        return n + 1
