# 参考100. Same Tree

class Solution:
    def isSubtree(self, root: Optional[TreeNode], subRoot: Optional[TreeNode]) -> bool:

        def isSameTree(p, q):
            if not p and not q:
                return True
            if not p or not q:
                return False
            return p.val == q.val and isSameTree(p.left, q.left) and isSameTree(p.right, q.right)

        def dfs(node, subRoot):
            if not node:
                return False
            if isSameTree(node, subRoot):
                return True
            return dfs(node.left, subRoot) or dfs(node.right, subRoot)

        if not subRoot:
            return True  # 空子树是任意树的子树
        return dfs(root, subRoot)
            
