#https://blog.csdn.net/fuxuemingzhu/article/details/82917037
#水往低处流，问哪些位置的水能同时流进太平洋和大西洋？
#将水的流向反转 -> 从低向高 “攀登”，分别能到达哪些位置用 p_visited 和 a_visited 表示。
#两者的交集就代表能同时流向太平洋和大西洋的位置。

class Solution(object):
    def pacificAtlantic(self, heights):
        """
        :type heights: List[List[int]]
        :rtype: List[List[int]]
        """
        row = len(heights)
        col = len(heights[0])

        #pacific 可到之处
        p_visited = [[False] * col for i in range(row)]
        #atlantic 可到之处
        a_visited = [[False] * col for i in range(row)]

        for i in range(row):
            self.dfs(p_visited, heights, row, col, i, 0)
            self.dfs(a_visited, heights, row, col, i, col - 1)
        for j in range(col):
            self.dfs(p_visited, heights, row, col, 0, j)
            self.dfs(a_visited, heights, row, col, row - 1, j)
        ans = []
        for i in range(row):
            for j in range(col):
                if p_visited[i][j] and a_visited[i][j]:
                    ans.append([i, j])
        return ans
    
    def dfs(self, visited, heights, row, col, i, j):
        visited[i][j] = True
        directions = [(-1, 0), (1, 0), (0, 1), (0, -1)]
        for d in directions:
            x, y = i + d[0], j + d[1]
            if x < 0 or x >= row or y < 0 or y >= col or visited[x][y] or heights[x][y] < heights[i][j]:
                continue
            self.dfs(visited, heights, row, col, x, y)
