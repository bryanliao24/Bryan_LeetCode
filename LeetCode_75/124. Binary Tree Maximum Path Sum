# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxPathSum(self, root: Optional[TreeNode]) -> int:
        def dfs(node):
            if not node:
                return 0, float("-inf")
            left, left_max = dfs(node.left)
            right, right_max = dfs(node.right)
            val = max(node.val, node.val + left, node.val + right)
            result = max(left_max, right_max, val, node.val + left + right)
            return val, result

        _, ans = dfs(root)
        return ans
        
