void DFS(int** image, int sr, int sc, int startColor, int color, int row, int col ){
    //若查找到边界值或是查找到的颜色不等于目标颜色则返回上一个点
    if(sr<0 || sr>=row || sc<0 || sc>=col){
        return;
    }
    if(image[sr][sc] == startColor){
        image[sr][sc]=color;
        DFS(image,sr-1,sc,startColor,color,row,col);
        DFS(image,sr,sc-1,startColor,color,row,col);
        DFS(image,sr+1,sc,startColor,color,row,col);
        DFS(image,sr,sc+1,startColor,color,row,col);
    }
    return;
}

int** floodFill(int** image, int imageSize, int* imageColSize, int sr, int sc, int color, int* returnSize, int** returnColumnSizes){
    int startColor = image[sr][sc]; //一开始的颜色
    int row = imageSize;
    int col = imageColSize[0];

    //if(startColor == color)return image;
    if(startColor != color){
        DFS(image,sr,sc,startColor,color,row,col);
    }
    *returnSize = imageSize;
    *returnColumnSizes = imageColSize;
    return image;

}
