class Solution(object):
    def canFinish(self, numCourses, prerequisites):
        """
        :type numCourses: int
        :type prerequisites: List[List[int]]
        :rtype: bool
        """
        graph = collections.defaultdict(list)
        for u, v in prerequisites:
            graph[u].append(v)
        # 1:[0] 0:[1]
        visited = [0] * numCourses
        path = []
        for i in range(numCourses): 
            if self.dfs(graph, visited, i): # 判断是否有环
                return False # 有环所以无法学习所有课程

        return True 
    
    def dfs(self, graph, visited, i):
        if visited[i] == 1: return True  #有环
        if visited[i] == 2: return False  #无环

        visited[i] = 1
        for j in graph[i]: 
            if self.dfs(graph, visited, j):  #判断是否有环
                return True # 有环
        
        visited[i] = 2
        return False #无环
