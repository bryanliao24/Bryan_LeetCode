//ASCII码表字母大小写相差32
//十进制 A：65 a：97
//设i以及j
//i从第一个字元开始往后
//同时j从倒数最后一个开始往前
//条件为s[i]==s[j]
bool isPalindrome(char * s){
    int len=strlen(s);
    if(len==1 || len==0)return true;

    int i=0,j=len-1;
    while(i<j){   
        if(s[i]>='A'&&s[i]<='Z' || s[i]>='a'&&s[i]<='z' || s[i]>='0'&&s[i]<='9'){   
            if(s[i]>='A'&&s[i]<='Z'){
                s[i]=s[i]+32;//转大小写
            }
        }
        else{
            i++;//若为非字母就往下一个找
            continue;
        }
        if(s[j]>='A'&&s[j]<='Z' || s[j]>='a'&&s[j]<='z' || s[j]>='0'&&s[j]<='9'){   
        if(s[j]>='A'&&s[j]<='Z'){
                s[j]=s[j]+32;//转大小写
            }
        }   
        else{
            j--;
            continue;
        }
        //若都检查为字母后 开始比较是否相同
        if(s[i]!=s[j]){
            return false;
        }
        i++;
        j--;
    }
    return true;
}

------------------------------------
## \w 匹配非特殊字符，即a-z、A-Z、0-9、_、汉字 
## \W 匹配特殊字符，即非字母、非数字、非汉字、非_

new_str = re.sub("\W", "", s)
new_str = new_str.lower()

if new_str == new_str[::-1]:
    return True

return False
-------------------------------------
class Solution(object):
    def isPalindrome(self, s):
        """
        :type s: str
        :rtype: bool
        """
        s = s.lower()
        left = 0 
        right = len(s) - 1 
        while left < right:
            if not s[left].isalnum():
                left += 1
            elif not s[right].isalnum():
                right -= 1
            elif s[left] != s[right]:
                return False
            else:
                left += 1
                right -= 1
        return True
