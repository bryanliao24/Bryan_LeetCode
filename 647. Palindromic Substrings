# dp
# 两个更新规则 
# 1. index i字母是否等于index j字母
# 2. str[i+1:j-1]是否是回文
# 因为单个字符是回文；而如果有3个以上的字符，需要两头相等并且去掉首尾之后依然是回文。

class Solution(object):
    def countSubstrings(self, s):
        """
        :type s: str
        :rtype: int
        """
                
        length = len(s)
        count = 0
        start, end, maxL = 0, 0, 0
        dp = [[0] * length for _ in range(length)]

        for i in range(length):
            for j in range(i):
                dp[j][i] = (s[j] == s[i]) and ((i - j < 2) or dp[j + 1][i - 1])
                if dp[j][i]:
                    count += 1
            dp[i][i] = 1
            count += 1
        
        return count
