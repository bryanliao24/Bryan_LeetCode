# dp
# dp初始为从0到nums中最大数
# 遍历时以当前index数与 -1 与 + 1的和比大小取大
# prev 保留该index前最大的和

class Solution(object):
    def deleteAndEarn(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        num_map = [0] * (max(nums)+1)

        for i in range(len(nums)):
            num_map[nums[i]] += nums[i]

        # dp
        prev = 0
        cur = 0
        for i in num_map:
            prev, cur = cur, max(cur, prev + i)
        
        return cur
