
//fmax比较俩数 返回double值 可以和Nah比
int maxDepth(struct TreeNode* root){
    if(root==NULL)return 0;
    return 1+fmax(maxDepth(root->left),maxDepth(root->right));
}


--------------------------------------------
# BFS 解法

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxDepth(self, root: Optional[TreeNode]) -> int:
        if not root: return 0
        que = deque()
        que.append(root)
        ans = 0

        while que:
            length = len(que)
            
            for i in range(length):
                node = que.popleft()
                
                if node.left:
                    que.append(node.left)
                if node.right:
                    que.append(node.right)

            ans += 1

        return ans
        
        
