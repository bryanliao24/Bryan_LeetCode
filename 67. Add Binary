//https://hackmd.io/@brad84622/mumineverdie
//'1'-'0' 得到 1
//'9'-'0' 得到 9 
//两个字符相减自动转换为int类型
//所以 -'0'意思是强制换成数字
//‘aa’ +0 = 'aa0' 表示字符串拼接
//int b + '0' 代表从int ->char
//假设s=3 if(s){}的意思是当s=0时不成立

char * addBinary(char * a, char * b){
    int lena=strlen(a),lenb=strlen(b);
    int c= lena>lenb ?lena :lenb;//c取a和b比较谁大者 c是sum的位数
    char *sum=(char*)malloc(sizeof(char)*(c+1)); //c+1多取一位放 \0
    //char* sum=(char*)malloc((c+1));
    sum[c]='\0';

    int i,carry=0;
    for(i=0;i<c;i++){
        //用carry去加a和b的最后一个数开始
        if(lena)carry+=a[--lena]- '0';
        if(lenb)carry+=b[--lenb]- '0';
        //判断carry是否进位
        //carry&1 and運算(皆為1才=1,其他=0)，
        sum[c-1-i]=(carry&1)+'0';
        //第一轮carry=2(十進位)=10(二進位)
        //所以 >>= 代表右移一位 上面10右移变成1
        carry>>=1;
    }
    //for 跑完查看是否还有carry进位首位的问题
    //realloc更大的空間
    if(carry==1){
        sum=(char*)realloc(sum,c+2);
        //全部数字往右走一格
        for(i=c;i>=0;i--){
            sum[i+1]=sum[i];
        }
        sum[0]='1';
    }
    return sum;
}
